---
- name:  Create {{ az_resourcegroup_name }} Resource Group on {{ az_region }}
  local_action:
    module: azure_rm_resourcegroup
    location: "{{ az_location }}"
    name: "{{ az_resourcegroup_name }}"
    state: present

- name:  Create {{ az_virtualnet_name }} Virtual Network on {{ az_region }}
  local_action:
    module: azure_rm_virtualnetwork
    location: "{{ az_location }}"
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_virtualnet_name }}"
    address_prefixes_cidr: "{{ az_vn_cidr_prefix }}"
    state: present

- name:  Create {{ az_subnet_name }} Subnet on {{ az_region }}
  local_action:
    module: azure_rm_subnet
    name: "{{ az_subnet_name }}"
    resource_group: "{{ az_resourcegroup_name }}"
    virtual_network_name: "{{ az_virtualnet_name }}"
    address_prefix_cidr: "{{ az_sub_cidr_prefix }}"
    state: present

- name:  Peer {{ az_virtualnet_name }} Virtual Network with the lab
  local_action:
    module: azure_rm_virtualnetworkpeering
    resource_group: "{{ az_lab_resourcegroup_name }}"
    virtual_network: "{{ az_lab_virtualnet_name }}"
    name:  "{{ az_peering_name }}"
    remote_virtual_network:
      resource_group: "{{ az_resourcegroup_name }}"
      name: "{{ az_virtualnet_name }}"
    allow_virtual_network_access: true
    allow_forwarded_traffic: true
  
- name: Wait for {{ az_virtualnet_name }} peering readyness
  local_action:
    module: azure_rm_virtualnetworkpeering_facts
    resource_group: "{{ az_lab_resourcegroup_name }}"
    virtual_network: "{{ az_lab_virtualnet_name }}"
    name:  "{{ az_peering_name }}"
  register: peering_status
  until: 
    peering_status.vnetpeerings.0.peering_state == "Initiated" or peering_status.vnetpeerings.0.peering_state == "Connected"
  retries: 5
  delay: 10

- name:  Peer the lab back with the {{ az_virtualnet_name }} Virtual Network
  local_action:
    module: azure_rm_virtualnetworkpeering
    resource_group: "{{ az_resourcegroup_name }}"
    virtual_network: "{{ az_virtualnet_name }}"
    name:  "{{ az_peering_name }}"
    remote_virtual_network:
      resource_group: "{{ az_lab_resourcegroup_name }}"
      name: "{{ az_lab_virtualnet_name }}"
    allow_virtual_network_access: false
    allow_forwarded_traffic: false

- name: Create "{{ az_storageaccount_name }}" Storage Account for "{{ az_resourcegroup_name }}"
  local_action:
    module: azure_rm_storageaccount
    name: "{{ az_storageaccount_name }}"
    resource_group: "{{ az_resourcegroup_name }}"
    location: "{{ az_location }}"
    type: "{{ az_storageaccount_type }}"
    kind: "{{ az_storageaccount_kind }}"
    access_tier: "{{ az_storageaccount_tier }}"
    state: present

- name: Get {{ az_storageaccount_name }} access secrets
  local_action:
    module: azure_rm_storageaccount_facts
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_storageaccount_name }}"
    show_connection_string: yes
  register: account_facts

- name: Get the blob access key 
  set_fact:
    blob_key:  >-
      {{ account_facts.ansible_facts.storageaccounts.0.primary_endpoints.blob.connectionstring 
      | regex_search('AccountKey=.*;') 
      | regex_replace('AccountKey=','') 
      | regex_replace(';$','') }}

- name: Create the "{{ az_storageaccount_container }}" container 
  local_action:
    module: azure_rm_storageblob
    resource_group:  "{{ az_resourcegroup_name }}"
    storage_account_name: "{{ az_storageaccount_name }}"
    container:  "{{ az_storageaccount_container }}"
    public_access: container

- name: Create availability set "{{ az_availabilitysets_name }}"
  azure_rm_availabilityset:
    name: "{{ az_availabilitysets_name }}"
    location: "{{ az_location }}"
    resource_group: "{{ az_resourcegroup_name }}"
    sku: "{{ az_availabilitysets_sku }}"

- name: Create public ip for {{ az_loadbalancer_name }}
  local_action:
    module: azure_rm_publicipaddress
    resource_group: "{{ az_resourcegroup_name }}"
    allocation_method: "{{ az_public_ip_method }}"
    name: "{{ az_lb_public_ip_name }}"
    domain_name_label: "{{ az_lb_domain_name_label }}"
  register: r_lb_public_ip

- debug: 
    var: r_lb_public_ip

- name: Create {{ az_loadbalancer_name }}
  local_action:
    module: azure_rm_loadbalancer
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_loadbalancer_name }}"
    location: "{{ az_location }}"
    frontend_ip_configurations:
      - name: "{{ az_loadbalancer_name }}-frontend"
        public_ip_address: "{{ az_lb_public_ip_name }}"
    backend_address_pools:
      - name: "{{ az_loadbalancer_name }}-web-srv"
    probes:
      - name: "{{ az_loadbalancer_name }}-probe"
        protocol: Tcp
        port: "{{ az_loadbalancer_bport }}"
        interval: 5
        fail_count: 3
    load_balancing_rules:
      - name: "{{ az_loadbalancer_name }}-rule"
        protocol: Tcp
        frontend_ip_configuration: "{{ az_loadbalancer_name }}-frontend"
        probe: "{{ az_loadbalancer_name }}-probe"
        load_distribution: Default
        backend_address_pool: "{{ az_loadbalancer_name }}-web-srv"
        frontend_port: "{{ az_loadbalancer_fport }}"
        backend_port: "{{ az_loadbalancer_bport }}"
        idle_timeout: 4
    state: present

- name: Record needed facts from the newly provisioned infrastructure
  set_fact:
    cat_facts: 
      blob_key: "{{ blob_key }}"
      blob_account: "{{ az_storageaccount_name }}"
      blob_container: "{{ az_storageaccount_container }}"
      lb_ip: "{{ r_lb_public_ip.state.ip_address }}"
      lb_fqdn: "{{ r_lb_public_ip.state.dns_settings.fqdn }}"


      